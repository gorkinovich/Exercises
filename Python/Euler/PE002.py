"""
| **Problem 2:** Even Fibonacci numbers
| URL: https://projecteuler.net/problem=2
::

    Each new term in the Fibonacci sequence is generated by adding
    the previous two terms. By starting with 1 and 2, the first 10
    terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose
    values do not exceed four million, find the sum of the
    even-valued terms.

:author: Gorka Suárez García
:copyright: (c) 2022, Gorka Suárez García
"""

######################################################################
# Constants
######################################################################

LIMIT = 4_000_000


######################################################################
# Functions
######################################################################

def fibonacci_generator():
    """
    Makes a generator that calculates Fibonacci's numbers.
    :return: A generator that calculates Fibonacci's numbers.
    """
    n1, n2 = 1, 0
    while True:
        yield n2
        n1, n2 = n1 + n2, n1


def main():
    """
    Main entry for the problem solver.
    """
    current = 0
    result = 0
    fibgen = fibonacci_generator()

    # Main loop to get Fibonacci's numbers bellow four million:
    while current < LIMIT:
        if current % 2 == 0:
            result += current
        current = next(fibgen)

    # Show the final result of the problem:
    print(f"The sum of the even-valued terms below {LIMIT} is {result}.")


######################################################################
# Module execution
######################################################################

if __name__ == "__main__":
    main()
